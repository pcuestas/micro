;______________________________________________________________
; MACROS
	STR_LEN		EQU 	80
	MAX_STR_LEN	EQU		60

;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE DATOS
DATOS SEGMENT
	CLR_PANT 	DB 	1BH,"[2","J$"
	CUR_MICRO	DB 	1BH,"[4;27fTECNOLOGIA DE COMPUTADORES$"
	PREG_NOM 	DB 	1BH,"[15;1fESCRIBE TU NOMBRE ? $"
	NOMBRE		DB 	STR_LEN DUP (0)
	PREG_AP 	DB 	1BH,"[16;1fESCRIBE TU APELLIDO ? $"
	APELLIDO	DB 	STR_LEN DUP (0)
	PREG_PAIS 	DB 	1BH,"[17;1fESCRIBE TU PAIS ? $"
	PAIS		DB 	STR_LEN DUP (0)
	TEXTO 		DB 	1BH,"[22;1f$"
	TEXTO1 		DB 	" (FROM $"
	TEXTO2 		DB 	") IS COURSING SECOND COURSE OF COMPUTER "
				DB  "SCIENCE",13,10,"$"
	SPACE		DB ' '
DATOS ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE PILA
PILA SEGMENT STACK "STACK"
	DB 40H DUP (0)
PILA ENDS
;_______________________________________________________________
; DEFINICION DEL SEGMENTO DE CODIGO
CODE SEGMENT
ASSUME CS:CODE,DS:DATOS,SS:PILA
; COMIENZO DEL PROCEDIMIENTO PRINCIPAL (START)
START PROC FAR
;INICIALIZACION DE LOS REGISTROS DE SEGMENTO
	MOV AX,DATOS
	MOV DS,AX	;FIN DE LAS INICIALIZACIONES
	
	MOV AH,9	; BORRA LA PANTALLA
	MOV DX, OFFSET CLR_PANT
	INT 21H
	
	MOV DX,OFFSET CUR_MICRO		;ESCRIBE "CURSO ...
	INT 21H

	PUSH OFFSET PREG_NOM
	PUSH OFFSET NOMBRE
	CALL READ_STRING 		;READ THE NAME
	ADD SP, +4

	PUSH OFFSET PREG_AP
	PUSH OFFSET APELLIDO
	CALL READ_STRING		;READ THE SURNAME
	ADD SP, +4
	
	PUSH OFFSET PREG_PAIS
	PUSH OFFSET PAIS
	CALL READ_STRING		;READ THE COUNTRY
	ADD SP, +4

	CALL PRINT_ENDING_STRING	; PRINT THE DATA ENTERED BY THE USER
	
	MOV AX,4C00H				; FIN DE PROGRAMA Y VUELTA AL DOS
	INT 21H
START ENDP


;THIS FUNCTION ASKS A QUESTION AND RETRIEVES THE ANSWER
;STACK CONTAINS: ..., QUESTION, ANSWER.
READ_STRING PROC NEAR
	PUSH BP
	MOV BP, SP

	MOV AH,9
	MOV DX, [BP+6]		;MUESTRA "ESCRIBE ...
	INT 21H       

	MOV AH,0AH			;ALMACENA EL NOMBRE TECLEADO
	MOV DX, [BP+4]
	MOV BX, DX			
	MOV BYTE PTR [BX+0], MAX_STR_LEN		;MAX NUMBER OF CHARS IN: STRING[0]
	INT 21H

	POP BP
	RET 
READ_STRING ENDP

; THIS FUNCTION PRINTS A STRING THAT HAS BEEN READ PREVIOUSLY.
; SI POINTS TO THE BASE
PRINT_ENTERED_STR PROC NEAR 
	MOV BX, 0
WRITE_CHAR:
	MOV DL,[SI+BX+2]		;WRITE A CHARACTER
	MOV AH,2
	INT 21H
	
	INC BX
	CMP BL, [SI+1]			;COMPARE WITH NUMBER OF CHARACTERS
	JNE WRITE_CHAR
	RET						;RETURN WHEN FINISHED
PRINT_ENTERED_STR ENDP

; PRINT THE STRING WITH THE NAME, SURNAME AND COUNTRY
; AFTER THESE HAVE BEEN READ
PRINT_ENDING_STRING PROC NEAR
	MOV AH,9			 		;PUTS CURSOR AT THE BOTTOM
	MOV DX, OFFSET TEXTO
	INT 21H

	MOV SI, OFFSET NOMBRE		
	CALL PRINT_ENTERED_STR		;PRINT THE NAME
	
	MOV DL,SPACE   				;PRINT A SPACE
	MOV AH,2
	INT 21H

	MOV SI, OFFSET APELLIDO
	CALL PRINT_ENTERED_STR		;PRINT THE SURNAME

	MOV DX, OFFSET TEXTO1		; PRINT " (FROM ...
	MOV AH,9
	INT 21H

	MOV SI, OFFSET PAIS
	CALL PRINT_ENTERED_STR		; PRINT THE COUNTRY

	MOV DX, OFFSET TEXTO2		; PRINT " IS COURSING  ...
	MOV AH,9
	INT 21H
	RET
PRINT_ENDING_STRING ENDP

;FIN DEL SEGMENTO DE CODIGO
CODE ENDS
;FIN DE PROGRAMA INDICANDO DONDE COMIENZA LA EJECUCION
END START
