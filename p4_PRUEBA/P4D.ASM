;**************************************************************************
; MBS 2021. BASIC STRUCTURE OF AN ASSEMBLER PROGRAMME
;**************************************************************************
; DATA SEGMENT DEFINITION
DATA SEGMENT
MSG DB "ESTO ES UN MENSAJE ABCDEFG$"
STRR DB 100 DUP(0)
DATA ENDS
;**************************************************************************
; STACK SEGMENT DEFINITION
STACKSEG SEGMENT STACK "STACK"
DB 100H DUP (0) ; initialization example, 64 bytes initialize to 0
STACKSEG ENDS


;**************************************************************************
; CODE SEGMENT DEFINITION
CODE SEGMENT
ASSUME CS: CODE, DS: DATA, SS: STACKSEG
; BEGINNING OF MAIN PROCEDURE
BEGIN PROC
; INITIALIZE THE SEGMENT REGISTER WITH ITS VALUE
MOV AX, DATA
MOV DS, AX
MOV AX, STACKSEG
MOV SS, AX

MOV SP, 100H ; LOAD A STACK POINTER WITH THE HIGHEST VALUE
; END OF INITIALIZATIONS
; BEGINNING OF THE PROGRAMME

MOV AX, 0
MOV ES, AX
LES BX, ES:[1CH*4]
MOV DL, "a"

MAIN_L:
CMP BYTE PTR ES:[BX-2], 182/20
JB MAIN_L

IN AL, 21H 
OR AL, 00000001B
OUT 21H, AL

MOV BYTE PTR ES:[BX-2], 0
MOV AH, 2
INT 21H 
INC DL

IN AL, 21H 
AND AL, 11111110B
OUT 21H, AL

CMP DL, "z"
JA MAIN_E 

JMP MAIN_L

MAIN_E:
; END OF THE PROGRAMME
MOV AX, 4C00H
INT 21H
BEGIN ENDP
; END OF THE CODE SEGMENT
CODE ENDS
; END OF THE PROGRAMME POINTING OUT WHERE THE EXECUTION BEGINS
END BEGIN
